{"version":3,"sources":["components/Pages/Brush/styles.module.scss","components/Pages/Brush/Brush.js"],"names":["module","exports","chart","Brush","_React$Component","_getPrototypeOf2","_this","Object","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","concat","draw","svg","d3","containerRef","append","attr","styles","data","x","y","push","Math","random","xScale","domain","d","range","yScale","colors","colors2","drawInitSymbols","selection","size","type","_ref","_ref2","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_","i","selectAll","enter","on","area","each","_ref3","idx","els","_ref4","transition","ease","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","ref","React","Component","connect","state","ownProps"],"mappings":"8EACAA,EAAAC,QAAA,CAAkBC,MAAA,wMCKLC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIQ,KAAO,WAaH,IAZA,IAGMC,EAAMC,SACAjB,EAAKkB,cACZC,OAAO,OACPC,KAAK,QANI,KAOTA,KAAK,SANK,KAOVA,KAAK,QAASC,IAAOzB,OAEpB0B,EAAO,GAEJC,EAAI,EAAGA,EAAI,MAAKA,EACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAGA,EACnBF,EAAKG,KAAK,CAACF,EAAmB,IAAhBG,KAAKC,WAI3B,IAAMC,EAASX,gBAEVY,OAAOZ,SAAUK,EAAM,SAAAQ,GAAC,OAAIA,EAAE,MAC9BC,MAAM,CAAC,EArBE,MAsBRC,EAASf,gBAEVY,OAAOZ,SAAUK,EAAM,SAAAQ,GAAC,OAAIA,EAAE,MAC9BC,MAAM,CAAC,EAxBG,MA0BTE,EAAShB,eAAgBA,oBACzBiB,EAAUjB,eAAgBA,cAAe,IAEzCkB,EAAkB,SAAAC,GACpBA,EACKhB,KACG,IACAH,WAEKoB,KAAK,IACLC,KAAKrB,gBAEbG,KAAK,YAAa,SAAAmB,GAAA,IAAAC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAsC,EAAA,GAAEhB,EAAFiB,EAAA,GAAKhB,EAALgB,EAAA,sBAAA1B,OAAyBc,EAAOL,GAAhC,MAAAT,OAAuCkB,EAAOR,GAA9C,OAClBJ,KAAK,OAAQ,SAACsB,EAAGC,GAAJ,OAAUT,EAAQS,MAGxC3B,EAAI4B,UAAU,QACTtB,KAAKA,GACLuB,QACA1B,OAAO,QACPP,KAAKuB,GAEVnB,EAAIJ,KACAK,UAEK6B,GAAG,QAAS,WACT,IAAMC,EAAO9B,QAASmB,UAEtBpB,EAAI4B,UAAU,QACTtB,KAAKA,GACL0B,KAAK,SAAAC,EAASC,EAAKC,GAAQ,IAAAC,EAAAnD,OAAAwC,EAAA,EAAAxC,CAAAgD,EAAA,GAApB1B,EAAoB6B,EAAA,GAAjB5B,EAAiB4B,EAAA,GAEpBxB,EAAOL,GAAKwB,EAAK,GAAG,IACpBnB,EAAOL,GAAKwB,EAAK,GAAG,IACpBf,EAAOR,GAAKuB,EAAK,GAAG,IACpBf,EAAOR,GAAKuB,EAAK,GAAG,IAEpB9B,SAAUkC,EAAID,IACTG,aACAC,KAAKrC,eACLG,KACG,IACAH,WAEKoB,KAAK,IACLC,KAAKrB,cAHVA,IAKHG,KAAK,OAAQa,EAAOiB,QAIxCJ,GAAG,QAAS,WACT9B,EAAI4B,UAAU,QACTtB,KAAKA,GACL+B,aACAzC,KAAKuB,OApF9BnC,EAAA,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAJ,EAAAC,GAAAG,OAAAuD,EAAA,EAAAvD,CAAAJ,EAAA,EAAA4D,IAAA,oBAAAC,MAAA,WA0FQvD,KAAKY,SA1Fb,CAAA0C,IAAA,SAAAC,MAAA,WA6Fa,IAAAC,EAAAxD,KACL,OACIyD,EAAAC,EAAAC,cAAA,OACIC,IAAK,SAAApB,GACDgB,EAAKzC,aAAeyB,SAjGxC9C,EAAA,CAA2BmE,IAAMC,WA4GlBC,sBAJf,SAAyBC,EAAOC,GAC5B,MAAO,IAKP,GAFWF,CAGbrE","file":"static/js/12.c688ac98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"styles_chart__bHeJI\"};","/* eslint-disable indent,prefer-destructuring */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport styles from './styles.module.scss';\n\nexport class Brush extends React.Component {\n    draw = () => {\n        const width = 500;\n        const height = 500;\n\n        const svg = d3\n            .select(this.containerRef)\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .attr('class', styles.chart);\n\n        const data = [];\n\n        for (let x = 0; x < 100; x += 1) {\n            for (let y = 0; y < 5; y += 1) {\n                data.push([x, Math.random() * 100]);\n            }\n        }\n\n        const xScale = d3\n            .scaleLinear()\n            .domain(d3.extent(data, d => d[0]))\n            .range([0, width]);\n        const yScale = d3\n            .scaleLinear()\n            .domain(d3.extent(data, d => d[1]))\n            .range([0, height]);\n\n        const colors = d3.scaleOrdinal(d3.schemeCategory10);\n        const colors2 = d3.scaleOrdinal(d3.schemeGreys[9]);\n\n        const drawInitSymbols = selection => {\n            selection\n                .attr(\n                    'd',\n                    d3\n                        .symbol()\n                        .size(20)\n                        .type(d3.symbolCross),\n                )\n                .attr('transform', ([x, y]) => `translate(${xScale(x)}, ${yScale(y)})`)\n                .attr('fill', (_, i) => colors2(i));\n        };\n\n        svg.selectAll('path')\n            .data(data)\n            .enter()\n            .append('path')\n            .call(drawInitSymbols);\n\n        svg.call(\n            d3\n                .brush()\n                .on('brush', () => {\n                    const area = d3.event.selection;\n\n                    svg.selectAll('path')\n                        .data(data)\n                        .each(([x, y], idx, els) => {\n                            if (\n                                xScale(x) > area[0][0] &&\n                                xScale(x) < area[1][0] &&\n                                yScale(y) > area[0][1] &&\n                                yScale(y) < area[1][1]\n                            ) {\n                                d3.select(els[idx])\n                                    .transition()\n                                    .ease(d3.easeBackOut)\n                                    .attr(\n                                        'd',\n                                        d3\n                                            .symbol()\n                                            .size(80)\n                                            .type(d3.symbolCross)(),\n                                    )\n                                    .attr('fill', colors(idx));\n                            }\n                        });\n                })\n                .on('start', () => {\n                    svg.selectAll('path')\n                        .data(data)\n                        .transition()\n                        .call(drawInitSymbols);\n                }),\n        );\n    };\n\n    componentDidMount() {\n        this.draw();\n    }\n\n    render() {\n        return (\n            <div\n                ref={i => {\n                    this.containerRef = i;\n                }}\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Brush);\n"],"sourceRoot":""}