{"version":3,"sources":["components/Pages/DraggableChart/styles.module.scss","components/Pages/DraggableChart/DraggableChart.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["module","exports","chart","DraggableChart","_React$Component","Object","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","apply","arguments","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_draw","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_avin_d3_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","diffRange","from","to","updateRange","svgMain","startX","startZoom","svg","currentData","xScale","xAxisScale","yScale","line","leftAxis","bottomAxis","redraw","_this","wrap","_context","prev","next","realWidth","realHeight","d3","containerRef","append","classed","styles","attr","call","clickDistance","on","x","diff","Math","min","maxPoints","max","transform","k","root","concat","data","map","i","random","sin","slice","domain","range","d","y","datum","height","select","transition","duration","stop","window","draw","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","ref","React","Component","connect","state","ownProps","__webpack_require__","g","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","then","result","done","toString","keys","object","push","reverse","length","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","__webpack_exports__"],"mappings":"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","file":"static/js/11.d698eafa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"styles_chart__2FQ15\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport styles from './styles.module.scss';\n\nexport class DraggableChart extends React.Component {\n    async draw() {\n        const realWidth = 600;\n        const realHeight = 400;\n        const margin = 30;\n\n        let diffRange = 25;\n        let from = 0;\n        let to = from + diffRange;\n\n        const updateRange = () => {\n            to = from + diffRange;\n        };\n\n        const maxPoints = 1000;\n\n        const width = realWidth - margin * 2;\n        const height = realHeight - margin * 2;\n\n        const svgMain = d3\n            .select(this.containerRef)\n            .append('svg')\n            .classed(styles.chart, true)\n            .attr('width', realWidth)\n            .attr('height', realHeight);\n\n        let startX;\n        let startZoom = 0;\n        svgMain\n            .call(\n                d3\n                    .drag()\n                    .clickDistance(10)\n                    .on('start', () => {\n                        startX = d3.event.x;\n                    })\n                    .on('drag', () => {\n                        const diff = d3.event.x - startX;\n\n                        if (diff < -10) {\n                            startX = d3.event.x;\n                            from = Math.min(maxPoints - 20, from + 1);\n                            to = Math.min(maxPoints, to + 1);\n                            redraw();\n                        }\n                        if (diff > 10) {\n                            startX = d3.event.x;\n                            from = Math.max(0, from - 1);\n                            to = Math.max(20, to - 1);\n                            redraw();\n                        }\n                    }),\n            )\n            .call(\n                d3.zoom().on('zoom', () => {\n                    const diff = d3.event.transform.k - startZoom;\n                    startZoom = d3.event.transform.k;\n\n                    if (diff < 0) {\n                        diffRange = Math.max(10, diffRange - 1);\n                        updateRange();\n                        redraw();\n                    }\n\n                    if (diff > 0) {\n                        diffRange = Math.min(50, diffRange + 1);\n                        updateRange();\n                        redraw();\n                    }\n                }),\n            );\n\n        const svg = svgMain\n            .append('g')\n            .classed(styles.root, true)\n            .attr('transform', `translate(${margin}, ${margin})`);\n\n        this.data = d3.range(maxPoints).map(i => i + Math.random() * 10 + Math.sin(i / 10) * 10);\n\n        const currentData = () => this.data.slice(from, to);\n\n        const xScale = () =>\n            d3\n                .scaleLinear()\n                .domain([0, diffRange])\n                .range([margin, width]);\n\n        const xAxisScale = () =>\n            d3\n                .scaleLinear()\n                .domain([from, to])\n                .range([margin, width]);\n\n        const yScale = () =>\n            d3\n                .scaleLinear()\n                .domain(d3.extent(currentData()))\n                .range([height, 0]);\n\n        const line = () =>\n            d3\n                .line()\n                .x((d, i) => xScale()(i))\n                .y(d => yScale()(d));\n\n        svg.append('path')\n            .attr('class', 'mainPath')\n            .datum(currentData())\n            .attr('d', line())\n            .attr('stroke', '#F00')\n            .attr('stroke-width', '2px')\n            .attr('fill', 'none');\n\n        const leftAxis = () => d3.axisLeft(yScale());\n        const bottomAxis = () => d3.axisBottom(xAxisScale());\n        svgMain\n            .append('g')\n            .attr('class', 'bottomAxis')\n            .attr('transform', `translate(0, ${height + margin})`)\n            .call(bottomAxis());\n\n        svg.append('g')\n            .attr('class', 'leftAxis')\n            .call(leftAxis());\n\n        const redraw = () => {\n            svg.select('.mainPath')\n                .datum(currentData())\n                .attr('d', line());\n\n            svgMain\n                .select('.bottomAxis')\n                .transition()\n                .duration(50)\n                .call(bottomAxis());\n\n            svg.select('.leftAxis')\n                .transition()\n                .duration(50)\n                .call(leftAxis());\n        };\n    }\n\n    componentDidMount() {\n        window.d3 = d3;\n        this.draw();\n    }\n\n    render() {\n        return (\n            <div\n                ref={i => {\n                    this.containerRef = i;\n                }}\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(DraggableChart);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}